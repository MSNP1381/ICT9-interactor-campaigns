<!DOCTYPE html>
<html>
  <head>
    <title>Wheel of Fortune</title>
    <meta charset="UTF-8" />
    <style>
      * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  height: 100vh;
  display: grid;
  place-items: center;
}

#wheelOfFortune {
  display: inline-block;
  position: relative;
  overflow: hidden;
}

#wheel {
  display: block;
}

#spin {
  font: 1.5em/0 sans-serif;
  user-select: none;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 30%;
  height: 30%;
  margin: -15%;
  background: #fff;
  color: #fff;
  box-shadow: 0 0 0 8px currentColor, 0 0px 15px 5px rgba(0, 0, 0, 0.6);
  border-radius: 50%;
  transition: 0.8s;
}

#spin::after {
  content: '';
  position: absolute;
  top: -17px;
  border: 10px solid transparent;
  border-bottom-color: currentColor;
  border-top: none;
}

#congratulations {
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: #fff;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0,0,0,0.3);
  text-align: center;
}

#sendToServer {
  margin-top: 10px;
  padding: 10px 20px;
  background-color: #4CAF50;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}
    </style>
  </head>
  
  <body>
    <div id="wheelOfFortune">
      <canvas id="wheel" width="300" height="300"></canvas>
      <div id="spin">SPIN</div>
    </div>
    <div id="congratulations">
      <h2>Congratulations!</h2>
      <p>You won: <span id="prize"></span></p>
      <button id="sendToServer">Send to Server</button>
    </div>
  </body>
  <script>
    const sectors = [
    {% for sector in sectors %}
      { color: '{{ sector.color }}', label: '{{ sector.label }}' }{% if not loop.last %},{% endif %}
    {% endfor %}
    ]

    const rand = (m, M) => Math.random() * (M - m) + m
    const tot = sectors.length
    const spinEl = document.querySelector('#spin')
    const ctx = document.querySelector('#wheel').getContext('2d')
    const dia = ctx.canvas.width
    const rad = dia / 2
    const PI = Math.PI
    const TAU = 2 * PI
    const arc = TAU / sectors.length

    const friction = 0.991 // 0.995=soft, 0.99=mid, 0.98=hard
    let angVel = 0 // Angular velocity
    let ang = 0 // Angle in radians

    const getIndex = () => Math.floor(tot - (ang / TAU) * tot) % tot

    function drawSector(sector, i) {
      const ang = arc * i
      ctx.save()
      // COLOR
      ctx.beginPath()
      ctx.fillStyle = sector.color
      ctx.moveTo(rad, rad)
      ctx.arc(rad, rad, rad, ang, ang + arc)
      ctx.lineTo(rad, rad)
      ctx.fill()
      // TEXT
      ctx.translate(rad, rad)
      ctx.rotate(ang + arc / 2)
      ctx.textAlign = 'right'
      ctx.fillStyle = '#fff'
      ctx.font = 'bold 30px sans-serif'
      ctx.fillText(sector.label, rad - 10, 10)
      //
      ctx.restore()
    }

    function rotate() {
      const sector = sectors[getIndex()]
      ctx.canvas.style.transform = `rotate(${ang - PI / 2}rad)`
      spinEl.textContent = !angVel ? 'SPIN' : sector.label
      spinEl.style.background = sector.color
    }

    function frame() {
      if (!angVel) return
      angVel *= friction // Decrement velocity by friction
      if (angVel < 0.002) {
        angVel = 0 // Bring to stop
        showCongratulations()
      }
      ang += angVel // Update angle
      ang %= TAU // Normalize angle
      rotate()
    }

    function engine() {
      frame()
      requestAnimationFrame(engine)
    }

    function showCongratulations() {
      const sector = sectors[getIndex()]
      document.getElementById('prize').textContent = sector.label
      document.getElementById('congratulations').style.display = 'block'
    }

    function init() {
      sectors.forEach(drawSector)
      rotate() // Initial rotation
      engine() // Start engine
      spinEl.addEventListener('click', () => {
        if (!angVel) {
          angVel = rand(0.25, 0.45)
          document.getElementById('congratulations').style.display = 'none'
        }
      })

      document.getElementById('sendToServer').addEventListener('click', () => {

        const sector = sectors[getIndex()]
        const widgetSubmitEvent = new CustomEvent('widgetSubmit', {
          detail: { result: sector.label }
      });
      window.dispatchEvent(widgetSubmitEvent);
      })
    }

    init()
  </script>
</html>
